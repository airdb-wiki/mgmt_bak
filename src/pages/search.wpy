<template>
    <view class="search">
        <view class="top">
            <input type="text" class="input" bindinput="handleInput" focus="{{focus}}" value="{{keywords}}" bindconfirm="handleSearch" confirm-type="search"/>
            <view class="cancel-btn" @tap="handleCancel">取消</view>
        </view>
        <view class="hot-keywords"></view>
        <view class="content">
            <view wx:if="{{list.length==0}}" class="empty">
                <image class="empty-icon" src="../imgs/empty-icon.png"/>
                <view class="empty-text">没有找到您要的结果</view>
            </view>
            <div wx:elif="{{list.length>0}}">
                <repeat for="{{list}}" key="index" index="index" item="item">
                    <!-- <list-item key="{{index}}"/> -->
                    <list-item :item.sync="item" key="{{index}}" :headUrl="item.AvatarUrl" :lostProvince="item.MissedProvince" :lostCity="item.MissedCity" :name="item.Nickname" :age="0" :itemId="item.Babyid" :lostTime="item.MissedAt" :lostAddress="item.MissedAddress" />
                </repeat>
            </div>
        </view>
    </view>
</template>
<script>
import wepy from 'wepy'
import ListItem from '../components/list-item'
import http from '../api/http.js'
export default class Search extends wepy.page{
    data = {
        keywords: '',
        focus: true,
        list: []
    }

    props = {

    }

    events = {

    }

    methods = {
        handleCancel() {
            wepy.navigateBack({
                delta: 1
            })
        },
        handleInput(e) {
            // console.log('handleInput--->', e)
            this.keywords = e.detail.value
        },
        handleSearch() {
            // console.log('handleSearch--->', this.keywords)
            this.getSearchData(this.keywords)

        }
    }

    getSearchData(keywords) {
        let that = this
        http.httpRequest({
            url: 'api/lost/search',
            method: 'POST',
            data: {
                keywords: keywords
            },
            success: function(res) {
                let list = []
                if(res.State.code == 200) {
                    list = res.data
                }
                that.list = list
                that.$apply()
                console.log('res--->', that.list)
            },
            fail: function(error) {

            }
        })
    }

    onLoad() {

    }

    components = {
        'list-item': ListItem
    }
}
</script>
<style lang="scss" scoped>
    .search {
        position: relative;
        .top {
            margin-left: 0;
            margin-top: 13px;
            width: 100%;
            height: 40px;
            position: relative;
        }
        .input {
            display: inline-block;
            margin-left: 15px;
            width: 273px;
            height: 40px;
            background: #FFFFFF;
            border: 1px solid #DCDEDF;
            border-radius: 20px;
            padding-left: 25px;
            font-family: PingFangSC-Light;
            font-size: 16px;
            color: #4A4A4A;
            letter-spacing: 0;
            line-height: 40px;
        }
        .cancel-btn {
            display: inline-block;
            vertical-align: top;
            line-height: 40px;
            font-family: PingFangSC-Light;
            font-size: 16px;
            color: #4A4A4A;
            letter-spacing: 0;
            margin-left: 15px;
        }
        .content {
            width: 100%;
            position: relative;
            margin-top: 14px;
            margin-left: 0;
            border-top: 1px solid #DCDEDF;
            .empty {
                width: 100%;
                margin-top: 86px;
                .empty-icon {
                    display: block;
                    margin: 0 auto;
                    width: 42px;
                    height: 40px;
                }
                .empty-text {
                    width: 100%;
                    text-align: center;
                    margin-top: 22px;
                    font-family: PingFangSC-Light;
                    font-size: 14px;
                    color: #969696;
                    letter-spacing: 0;
                    line-height: 20px;
                }
            }
        }
    }
</style>