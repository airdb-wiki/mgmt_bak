<style lang="less">
.login-wrap {
  margin-top: 50px;
}
</style>
<template>
  <view class="page">
    <view class="page__bd login-wrap">
      <view class="weui-toptips weui-toptips_warn" wx:if="{{ errorMessage }}">{{ errorMessage }}</view>

      <view class="weui-cells__title">Larabbs 用户登录</view>
      <view class="weui-cells weui-cells_after-title">
        <view class="weui-cell weui-cell_input {{ error ? 'weui-cell_warn' : ''}}">
          <view class="weui-cell__hd">
            <view class="weui-label">用户名</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" placeholder="手机号或邮箱" @input="bindUsernameInput" />
          </view>
          <view wx:if="{{ error }}" class="weui-cell__ft">
            <icon type="warn" size="23" color="#E64340"></icon>
          </view>
        </view>
        <view class="weui-cell weui-cell_input {{ error ? 'weui-cell_warn' : ''}}">
          <view class="weui-cell__hd">
            <view class="weui-label">密码</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" placeholder="输入密码" type="password" @input="bindPasswordInput" />
          </view>
          <view wx:if="{{ error }}" class="weui-cell__ft">
            <icon type="warn" size="23" color="#E64340"></icon>
          </view>
        </view>
      </view>

      <view class="weui-agree__text">
        如果你还没有 Larabbs 用户可以 <navigator url="/pages/auth/register" class="weui-agree__link">注册新用户</navigator>
      </view>

      <view class="weui-btn-area">
        <button class="weui-btn" type="primary" @tap="submit">登录</button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class Login extends wepy.page {
    config = {
      navigationBarTitleText: '登录'
    }
    data = {
      // 用户名
      username: '',
      // 密码
      password: '',
      // 是否有错
      error: false,
      // 错误信息
      errorMessage: ''
    }
    methods = {
      // 绑定用户名 input 变化
      bindUsernameInput (e) {
        this.username = e.detail.value
      },
      // 绑定密码 input 变化
      bindPasswordInput (e) {
        this.password = e.detail.value
      },
      // 表单提交
      async submit() {
        // 提交时重置错误
        this.error = false
        this.errorMessage = ''

        if (!this.username || !this.password) {
          this.errorMessage = '请填写账户名或密码'
          return
        }

        // 获取用户名和密码
        let params = {
          username: this.username,
          password: this.password
        }

        try {
          let authResponse = await api.login(params)

          // 请求结果为 401 说明用户名和密码错误，显示错误提示
          if (authResponse.statusCode === 401) {
            this.error = true
            this.errorMessage = authResponse.data.message
            this.$apply()
          }

          // 201 为登录正确，返回上一页
          if (authResponse.statusCode === 201) {
            // 获取用户权限
            this.$parent.getPerms()
            wepy.navigateBack()
          }
        } catch (err) {
          wepy.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
          })
        }
      }
    }
    // 页面打开事件
    async onShow() {
      try {
        // 打开页面自动调用一次登录
        let authResponse = await api.login()

        // 登录成功返回上一页
        if (authResponse.statusCode === 201) {
          // 获取用户权限
          this.$parent.getPerms()
          wepy.navigateBack()
        }
      } catch (err) {
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员'
        })
      }
    }
  }
</script>
